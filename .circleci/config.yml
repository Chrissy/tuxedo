# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1

jobs:
  build:
    docker:
      - image: circleci/cimg:2.7.6-browsers
        auth:
          username: fivefourths
          password: $DOCKERHUB_PASSWORD
        environment:
          TEST_DATABASE_URL: postgresql://root@localhost/circle_test
          PGUSER: postgres
          RAILS_ENV: test
      - image: cimg/postgres:12.9
        auth:
          username: fivefourths
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: "Update Node.js and npm"
          command: |
            curl -sSL "https://nodejs.org/dist/v14.15.0/node-v14.15.0-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v14.15.0-linux-x64/bin/node
            curl https://www.npmjs.com/install.sh | sudo bash

      - run:
          name: "Install postgresql-client"
          command: |
            sudo apt-get update
            sudo apt-get install lsb-release
            curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
            sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
            sudo apt-get update
            sudo apt install postgresql-client-12
            echo 'export PATH=/usr/lib/postgresql/12.3/bin/:$PATH' >> $BASH_ENV

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem update --system
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      - run: bundle exec rails test

      - run: npm install
      - run: npm run build

      - run:
          name: Restore database copy
          command: |
            curl https://chrissy-tuxedo-no2.s3.us-east-2.amazonaws.com/11-25-2020.dump -o latest.dump
            dropdb mock_db --if-exists -h localhost -p 5432
            createdb -h localhost -p 5432 mock_db
            pg_restore -h localhost -p 5432 --verbose --clean --if-exists --no-acl --no-owner -U postgres -d mock_db latest.dump

      - run:
          name: start server
          command: RAILS_ENV=test bundle exec rails server
          background: true

      - run: dockerize -wait http://localhost:3000 -timeout 1m
      - run: PERCY_TOKEN=$PERCY_TOKEN npm run snapshots

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
